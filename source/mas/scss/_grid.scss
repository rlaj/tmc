/////////////////
// Semantic.gs // for SCSS: http://sass-lang.com/
/////////////////

// Defaults which you can freely override
$column-width: 85px;
$gutter-width: 15px;
$columns: 14;
$mobile-columns: 7;

// Utility function - you should never need to modify this
@function gridsystem-width($columns:$columns) {
	@return ($column-width * $columns) + ($gutter-width * $columns);
}

// Set $total-width to 100% for a fluid layout
//$total-width: gridsystem-width($columns);
$total-width: 100%;

// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// $min-width: 999999;
// $correction: 0.5 / $min-width * 100;

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
	*zoom:1;

	&:before,
	&:after {
	    content:"";
	    display:table;
	}
	&:after {
	    clear:both;
	}
}

@function margin-width($columns:$columns) {
	@return $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@function columnsystem-width($x,$columns:$columns) {
	@return ((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns);
}

//////////
// GRID //
//////////

@mixin row($columns:$columns) {
	display: block;
	width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));
	margin: 0 margin-width($columns)*(-1);
	// *width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns))-$correction;
	// *margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1)-$correction;
	@include clearfix();
}
@mixin multi-column-width($x,$columns:$columns) {
	width: $total-width*(columnsystem-width($x,$columns));
	// *width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns))-$correction;
}
@mixin column($x,$columns:$columns) {
	float: left;
	@include multi-column-width($x,$columns);
	margin-left: margin-width($columns);
	margin-right: margin-width($columns);
	margin-bottom: margin-width($columns)*2;
	// *margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns))-$correction;
}
@mixin center-column($x,$columns:$columns) {
	@include multi-column-width($x,$columns);
	// margin: 0 $total-width*((1 - columnsystem-width($x,$columns))/2);
	margin-left: auto; margin-right: auto;
}
@mixin push($offset:1) {
	margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + margin-width($columns);
}
@mixin pull($offset:1) {
	margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + margin-width($columns);
}