// === Sylvester ===
// Vector and Matrix mathematics modules for JavaScript
// Copyright (c) 2007 James Coglan
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

function Vector(){}function Matrix(){}function Line(){}function Plane(){}var Sylvester={version:"0.1.3",precision:1e-6};Vector.prototype={e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},dimensions:function(){return this.elements.length},modulus:function(){return Math.sqrt(this.dot(this))},eql:function(e){var t=this.elements.length;var n=e.elements||e;if(t!=n.length){return false}do{if(Math.abs(this.elements[t-1]-n[t-1])>Sylvester.precision){return false}}while(--t);return true},dup:function(){return Vector.create(this.elements)},map:function(e){var t=[];this.each(function(n,r){t.push(e(n,r))});return Vector.create(t)},each:function(e){var t=this.elements.length,n=t,r;do{r=n-t;e(this.elements[r],r+1)}while(--t)},toUnitVector:function(){var e=this.modulus();if(e===0){return this.dup()}return this.map(function(t){return t/e})},angleFrom:function(e){var t=e.elements||e;var n=this.elements.length,r=n,i;if(n!=t.length){return null}var s=0,o=0,u=0;this.each(function(e,n){s+=e*t[n-1];o+=e*e;u+=t[n-1]*t[n-1]});o=Math.sqrt(o);u=Math.sqrt(u);if(o*u===0){return null}var a=s/(o*u);if(a<-1){a=-1}if(a>1){a=1}return Math.acos(a)},isParallelTo:function(e){var t=this.angleFrom(e);return t===null?null:t<=Sylvester.precision},isAntiparallelTo:function(e){var t=this.angleFrom(e);return t===null?null:Math.abs(t-Math.PI)<=Sylvester.precision},isPerpendicularTo:function(e){var t=this.dot(e);return t===null?null:Math.abs(t)<=Sylvester.precision},add:function(e){var t=e.elements||e;if(this.elements.length!=t.length){return null}return this.map(function(e,n){return e+t[n-1]})},subtract:function(e){var t=e.elements||e;if(this.elements.length!=t.length){return null}return this.map(function(e,n){return e-t[n-1]})},multiply:function(e){return this.map(function(t){return t*e})},x:function(e){return this.multiply(e)},dot:function(e){var t=e.elements||e;var n,r=0,i=this.elements.length;if(i!=t.length){return null}do{r+=this.elements[i-1]*t[i-1]}while(--i);return r},cross:function(e){var t=e.elements||e;if(this.elements.length!=3||t.length!=3){return null}var n=this.elements;return Vector.create([n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]])},max:function(){var e=0,t=this.elements.length,n=t,r;do{r=n-t;if(Math.abs(this.elements[r])>Math.abs(e)){e=this.elements[r]}}while(--t);return e},indexOf:function(e){var t=null,n=this.elements.length,r=n,i;do{i=r-n;if(t===null&&this.elements[i]==e){t=i+1}}while(--n);return t},toDiagonalMatrix:function(){return Matrix.Diagonal(this.elements)},round:function(){return this.map(function(e){return Math.round(e)})},snapTo:function(e){return this.map(function(t){return Math.abs(t-e)<=Sylvester.precision?e:t})},distanceFrom:function(e){if(e.anchor){return e.distanceFrom(this)}var t=e.elements||e;if(t.length!=this.elements.length){return null}var n=0,r;this.each(function(e,i){r=e-t[i-1];n+=r*r});return Math.sqrt(n)},liesOn:function(e){return e.contains(this)},liesIn:function(e){return e.contains(this)},rotate:function(e,t){var n,r,i,s,o;switch(this.elements.length){case 2:n=t.elements||t;if(n.length!=2){return null}r=Matrix.Rotation(e).elements;i=this.elements[0]-n[0];s=this.elements[1]-n[1];return Vector.create([n[0]+r[0][0]*i+r[0][1]*s,n[1]+r[1][0]*i+r[1][1]*s]);break;case 3:if(!t.direction){return null}var u=t.pointClosestTo(this).elements;r=Matrix.Rotation(e,t.direction).elements;i=this.elements[0]-u[0];s=this.elements[1]-u[1];o=this.elements[2]-u[2];return Vector.create([u[0]+r[0][0]*i+r[0][1]*s+r[0][2]*o,u[1]+r[1][0]*i+r[1][1]*s+r[1][2]*o,u[2]+r[2][0]*i+r[2][1]*s+r[2][2]*o]);break;default:return null}},reflectionIn:function(e){if(e.anchor){var t=this.elements.slice();var n=e.pointClosestTo(t).elements;return Vector.create([n[0]+(n[0]-t[0]),n[1]+(n[1]-t[1]),n[2]+(n[2]-(t[2]||0))])}else{var r=e.elements||e;if(this.elements.length!=r.length){return null}return this.map(function(e,t){return r[t-1]+(r[t-1]-e)})}},to3D:function(){var e=this.dup();switch(e.elements.length){case 3:break;case 2:e.elements.push(0);break;default:return null}return e},inspect:function(){return"["+this.elements.join(", ")+"]"},setElements:function(e){this.elements=(e.elements||e).slice();return this}};Vector.create=function(t){var n=new Vector;return n.setElements(t)};Vector.createNoCopy=function(t){var n=new Vector;n.elements=t;return n};Vector.i=Vector.createNoCopy([1,0,0]);Vector.j=Vector.createNoCopy([0,1,0]);Vector.k=Vector.createNoCopy([0,0,1]);Vector.Random=function(e){var t=[];do{t.push(Math.random())}while(--e);return Vector.createNoCopy(t)};Vector.Zero=function(e){var t=[];do{t.push(0)}while(--e);return Vector.createNoCopy(t)};Matrix.prototype={e:function(e,t){if(e<1||e>this.elements.length||t<1||t>this.elements[0].length){return null}return this.elements[e-1][t-1]},row:function(e){if(e>this.elements.length){return null}return Vector.create(this.elements[e-1])},col:function(e){if(e>this.elements[0].length){return null}var t=[],n=this.elements.length,r=n,i;do{i=r-n;t.push(this.elements[i][e-1])}while(--n);return Vector.create(t)},dimensions:function(){return{rows:this.elements.length,cols:this.elements[0].length}},rows:function(){return this.elements.length},cols:function(){return this.elements[0].length},eql:function(e){var t=e.elements||e;if(typeof t[0][0]=="undefined"){t=Matrix.create(t).elements}if(this.elements.length!=t.length||this.elements[0].length!=t[0].length){return false}var n=this.elements.length,r=n,i,s,o=this.elements[0].length,u;do{i=r-n;s=o;do{u=o-s;if(Math.abs(this.elements[i][u]-t[i][u])>Sylvester.precision){return false}}while(--s)}while(--n);return true},dup:function(){return Matrix.create(this.elements)},map:function(e){var t=[],n=this.elements.length,r=n,i,s,o=this.elements[0].length,u;do{i=r-n;s=o;t[i]=[];do{u=o-s;t[i][u]=e(this.elements[i][u],i+1,u+1)}while(--s)}while(--n);return Matrix.create(t)},isSameSizeAs:function(e){var t=e.elements||e;if(typeof t[0][0]=="undefined"){t=Matrix.create(t).elements}return this.elements.length==t.length&&this.elements[0].length==t[0].length},add:function(e){var t=e.elements||e;if(typeof t[0][0]=="undefined"){t=Matrix.create(t).elements}if(!this.isSameSizeAs(t)){return null}return this.map(function(e,n,r){return e+t[n-1][r-1]})},subtract:function(e){var t=e.elements||e;if(typeof t[0][0]=="undefined"){t=Matrix.create(t).elements}if(!this.isSameSizeAs(t)){return null}return this.map(function(e,n,r){return e-t[n-1][r-1]})},canMultiplyFromLeft:function(e){var t=e.elements||e;if(typeof t[0][0]=="undefined"){t=Matrix.create(t).elements}return this.elements[0].length==t.length},multiply:function(e){if(!e.elements){return this.map(function(t){return t*e})}var t=e.modulus?true:false;var n=e.elements||e;if(typeof n[0][0]=="undefined"){n=Matrix.create(n).elements}if(!this.canMultiplyFromLeft(n)){return null}var r=this.elements.length,i=r,s,o,u=n[0].length,a;var f=this.elements[0].length,l=[],c,h,p;do{s=i-r;l[s]=[];o=u;do{a=u-o;c=0;h=f;do{p=f-h;c+=this.elements[s][p]*n[p][a]}while(--h);l[s][a]=c}while(--o)}while(--r);var n=Matrix.create(l);return t?n.col(1):n},x:function(e){return this.multiply(e)},xvec:function(t){var n=t.elements;return Vector.createNoCopy(this.xvecarray(n))},xvecarray:function(t){var n=t.length;var r=new Array(n);var i=this.elements;var s=i.length;for(var o=0;o<s;++o){var u=0;var a=i[o];for(var f=0;f<n;++f){u+=a[f]*t[f]}r[o]=u}return r},xPoint3D:function(t){var n=this.elements;return{x:t.x*n[0][0]+t.y*n[0][1]+t.z*n[0][2],y:t.x*n[1][0]+t.y*n[1][1]+t.z*n[1][2],z:t.x*n[2][0]+t.y*n[2][1]+t.z*n[2][2]}},xPoint3Dhom1:function(t){var n=this.elements;return{x:t.x*n[0][0]+t.y*n[0][1]+t.z*n[0][2]+n[0][3],y:t.x*n[1][0]+t.y*n[1][1]+t.z*n[1][2]+n[1][3],z:t.x*n[2][0]+t.y*n[2][1]+t.z*n[2][2]+n[2][3]}},xPoint3Dhom:function(t){var n=this.elements;return{x:t.x*n[0][0]+t.y*n[0][1]+t.z*n[0][2]+n[0][3],y:t.x*n[1][0]+t.y*n[1][1]+t.z*n[1][2]+n[1][3],z:t.x*n[2][0]+t.y*n[2][1]+t.z*n[2][2]+n[2][3],w:t.x*n[3][0]+t.y*n[3][1]+t.z*n[3][2]+n[3][3]}},minor:function(e,t,n,r){var i=[],s=n,o,u,a;var f=this.elements.length,l=this.elements[0].length;do{o=n-s;i[o]=[];u=r;do{a=r-u;i[o][a]=this.elements[(e+o-1)%f][(t+a-1)%l]}while(--u)}while(--s);return Matrix.create(i)},transpose:function(){var e=this.elements.length,t=this.elements[0].length;var n=[],r=t,i,s,o;do{i=t-r;n[i]=[];s=e;do{o=e-s;n[i][o]=this.elements[o][i]}while(--s)}while(--r);return Matrix.create(n)},isSquare:function(){return this.elements.length==this.elements[0].length},max:function(){var e=0,t=this.elements.length,n=t,r,i,s=this.elements[0].length,o;do{r=n-t;i=s;do{o=s-i;if(Math.abs(this.elements[r][o])>Math.abs(e)){e=this.elements[r][o]}}while(--i)}while(--t);return e},indexOf:function(e){var t=null,n=this.elements.length,r=n,i,s,o=this.elements[0].length,u;do{i=r-n;s=o;do{u=o-s;if(this.elements[i][u]==e){return{i:i+1,j:u+1}}}while(--s)}while(--n);return null},diagonal:function(){if(!this.isSquare){return null}var e=[],t=this.elements.length,n=t,r;do{r=n-t;e.push(this.elements[r][r])}while(--t);return Vector.create(e)},toRightTriangular:function(){var e=this.dup(),t;var n=this.elements.length,r=n,i,s,o=this.elements[0].length,u;do{i=r-n;if(e.elements[i][i]==0){for(j=i+1;j<r;j++){if(e.elements[j][i]!=0){t=[];s=o;do{u=o-s;t.push(e.elements[i][u]+e.elements[j][u])}while(--s);e.elements[i]=t;break}}}if(e.elements[i][i]!=0){for(j=i+1;j<r;j++){var a=e.elements[j][i]/e.elements[i][i];t=[];s=o;do{u=o-s;t.push(u<=i?0:e.elements[j][u]-e.elements[i][u]*a)}while(--s);e.elements[j]=t}}}while(--n);return e},toUpperTriangular:function(){return this.toRightTriangular()},determinant:function(){if(!this.isSquare()){return null}var e=this.toRightTriangular();var t=e.elements[0][0],n=e.elements.length-1,r=n,i;do{i=r-n+1;t=t*e.elements[i][i]}while(--n);return t},det:function(){return this.determinant()},isSingular:function(){return this.isSquare()&&this.determinant()===0},trace:function(){if(!this.isSquare()){return null}var e=this.elements[0][0],t=this.elements.length-1,n=t,r;do{r=n-t+1;e+=this.elements[r][r]}while(--t);return e},tr:function(){return this.trace()},rank:function(){var e=this.toRightTriangular(),t=0;var n=this.elements.length,r=n,i,s,o=this.elements[0].length,u;do{i=r-n;s=o;do{u=o-s;if(Math.abs(e.elements[i][u])>Sylvester.precision){t++;break}}while(--s)}while(--n);return t},rk:function(){return this.rank()},augment:function(e){var t=e.elements||e;if(typeof t[0][0]=="undefined"){t=Matrix.create(t).elements}var n=this.dup(),r=n.elements[0].length;var i=n.elements.length,s=i,o,u,a=t[0].length,f;if(i!=t.length){return null}do{o=s-i;u=a;do{f=a-u;n.elements[o][r+f]=t[o][f]}while(--u)}while(--i);return n},inverse:function(){if(!this.isSquare()||this.isSingular()){return null}var e=this.elements.length,t=e,n,r;var i=this.augment(Matrix.I(e)).toRightTriangular();var s,o=i.elements[0].length,u,a,f;var l=[],c;do{n=e-1;a=[];s=o;l[n]=[];f=i.elements[n][n];do{u=o-s;c=i.elements[n][u]/f;a.push(c);if(u>=t){l[n].push(c)}}while(--s);i.elements[n]=a;for(r=0;r<n;r++){a=[];s=o;do{u=o-s;a.push(i.elements[r][u]-i.elements[n][u]*i.elements[r][n])}while(--s);i.elements[r]=a}}while(--e);return Matrix.create(l)},inv:function(){return this.inverse()},round:function(){return this.map(function(e){return Math.round(e)})},snapTo:function(e){return this.map(function(t){return Math.abs(t-e)<=Sylvester.precision?e:t})},inspect:function(){var e=[];var t=this.elements.length,n=t,r;do{r=n-t;e.push(Vector.create(this.elements[r]).inspect())}while(--t);return e.join("\n")},setElements:function(e){var t,n=e.elements||e;if(typeof n[0][0]!="undefined"){var r=n.length,i=r,s,o,u;this.elements=[];do{t=i-r;s=n[t].length;o=s;this.elements[t]=[];do{u=o-s;this.elements[t][u]=n[t][u]}while(--s)}while(--r);return this}var a=n.length,f=a;this.elements=[];do{t=f-a;this.elements.push([n[t]])}while(--a);return this}};Matrix.create=function(e){var t=new Matrix;return t.setElements(e)};Matrix.I=function(e){var t=[],n=e,r,i,s;do{r=n-e;t[r]=[];i=n;do{s=n-i;t[r][s]=r==s?1:0}while(--i)}while(--e);return Matrix.create(t)};Matrix.Diagonal=function(e){var t=e.length,n=t,r;var i=Matrix.I(t);do{r=n-t;i.elements[r][r]=e[r]}while(--t);return i};Matrix.Rotation=function(e,t){if(!t){return Matrix.create([[Math.cos(e),-Math.sin(e)],[Math.sin(e),Math.cos(e)]])}var n=t.dup();if(n.elements.length!=3){return null}var r=n.modulus();var i=n.elements[0]/r,s=n.elements[1]/r,o=n.elements[2]/r;var u=Math.sin(e),a=Math.cos(e),f=1-a;return Matrix.create([[f*i*i+a,f*i*s-u*o,f*i*o+u*s],[f*i*s+u*o,f*s*s+a,f*s*o-u*i],[f*i*o-u*s,f*s*o+u*i,f*o*o+a]])};Matrix.RotationX=function(e){var t=Math.cos(e),n=Math.sin(e);return Matrix.create([[1,0,0],[0,t,-n],[0,n,t]])};Matrix.RotationY=function(e){var t=Math.cos(e),n=Math.sin(e);return Matrix.create([[t,0,n],[0,1,0],[-n,0,t]])};Matrix.RotationZ=function(e){var t=Math.cos(e),n=Math.sin(e);return Matrix.create([[t,-n,0],[n,t,0],[0,0,1]])};Matrix.Random=function(e,t){return Matrix.Zero(e,t).map(function(){return Math.random()})};Matrix.Zero=function(e,t){var n=[],r=e,i,s,o;do{i=e-r;n[i]=[];s=t;do{o=t-s;n[i][o]=0}while(--s)}while(--r);return Matrix.create(n)};Line.prototype={eql:function(e){return this.isParallelTo(e)&&this.contains(e.anchor)},dup:function(){return Line.create(this.anchor,this.direction)},translate:function(e){var t=e.elements||e;return Line.create([this.anchor.elements[0]+t[0],this.anchor.elements[1]+t[1],this.anchor.elements[2]+(t[2]||0)],this.direction)},isParallelTo:function(e){if(e.normal){return e.isParallelTo(this)}var t=this.direction.angleFrom(e.direction);return Math.abs(t)<=Sylvester.precision||Math.abs(t-Math.PI)<=Sylvester.precision},distanceFrom:function(e){if(e.normal){return e.distanceFrom(this)}if(e.direction){if(this.isParallelTo(e)){return this.distanceFrom(e.anchor)}var t=this.direction.cross(e.direction).toUnitVector().elements;var n=this.anchor.elements,r=e.anchor.elements;return Math.abs((n[0]-r[0])*t[0]+(n[1]-r[1])*t[1]+(n[2]-r[2])*t[2])}else{var i=e.elements||e;var n=this.anchor.elements,s=this.direction.elements;var o=i[0]-n[0],u=i[1]-n[1],a=(i[2]||0)-n[2];var f=Math.sqrt(o*o+u*u+a*a);if(f===0)return 0;var l=(o*s[0]+u*s[1]+a*s[2])/f;var c=1-l*l;return Math.abs(f*Math.sqrt(c<0?0:c))}},contains:function(e){var t=this.distanceFrom(e);return t!==null&&t<=Sylvester.precision},liesIn:function(e){return e.contains(this)},intersects:function(e){if(e.normal){return e.intersects(this)}return!this.isParallelTo(e)&&this.distanceFrom(e)<=Sylvester.precision},intersectionWith:function(e){if(e.normal){return e.intersectionWith(this)}if(!this.intersects(e)){return null}var t=this.anchor.elements,n=this.direction.elements,r=e.anchor.elements,i=e.direction.elements;var s=n[0],o=n[1],u=n[2],a=i[0],f=i[1],l=i[2];var c=t[0]-r[0],h=t[1]-r[1],p=t[2]-r[2];var d=-s*c-o*h-u*p;var v=a*c+f*h+l*p;var m=s*s+o*o+u*u;var g=a*a+f*f+l*l;var y=s*a+o*f+u*l;var b=(d*g/m+y*v)/(g-y*y);return Vector.create([t[0]+b*s,t[1]+b*o,t[2]+b*u])},pointClosestTo:function(e){if(e.direction){if(this.intersects(e)){return this.intersectionWith(e)}if(this.isParallelTo(e)){return null}var t=this.direction.elements,n=e.direction.elements;var r=t[0],i=t[1],s=t[2],o=n[0],u=n[1],a=n[2];var f=s*o-r*a,l=r*u-i*o,c=i*a-s*u;var h=Vector.create([f*a-l*u,l*o-c*a,c*u-f*o]);var p=Plane.create(e.anchor,h);return p.intersectionWith(this)}else{var p=e.elements||e;if(this.contains(p)){return Vector.create(p)}var d=this.anchor.elements,t=this.direction.elements;var r=t[0],i=t[1],s=t[2],v=d[0],m=d[1],g=d[2];var f=r*(p[1]-m)-i*(p[0]-v),l=i*((p[2]||0)-g)-s*(p[1]-m),c=s*(p[0]-v)-r*((p[2]||0)-g);var y=Vector.create([i*f-s*c,s*l-r*f,r*c-i*l]);var b=this.distanceFrom(p)/y.modulus();return Vector.create([p[0]+y.elements[0]*b,p[1]+y.elements[1]*b,(p[2]||0)+y.elements[2]*b])}},rotate:function(e,t){if(typeof t.direction=="undefined"){t=Line.create(t.to3D(),Vector.k)}var n=Matrix.Rotation(e,t.direction).elements;var r=t.pointClosestTo(this.anchor).elements;var i=this.anchor.elements,s=this.direction.elements;var o=r[0],u=r[1],a=r[2],f=i[0],l=i[1],c=i[2];var h=f-o,p=l-u,d=c-a;return Line.create([o+n[0][0]*h+n[0][1]*p+n[0][2]*d,u+n[1][0]*h+n[1][1]*p+n[1][2]*d,a+n[2][0]*h+n[2][1]*p+n[2][2]*d],[n[0][0]*s[0]+n[0][1]*s[1]+n[0][2]*s[2],n[1][0]*s[0]+n[1][1]*s[1]+n[1][2]*s[2],n[2][0]*s[0]+n[2][1]*s[1]+n[2][2]*s[2]])},reflectionIn:function(e){if(e.normal){var t=this.anchor.elements,n=this.direction.elements;var r=t[0],i=t[1],s=t[2],o=n[0],u=n[1],a=n[2];var f=this.anchor.reflectionIn(e).elements;var l=r+o,c=i+u,h=s+a;var p=e.pointClosestTo([l,c,h]).elements;var d=[p[0]+(p[0]-l)-f[0],p[1]+(p[1]-c)-f[1],p[2]+(p[2]-h)-f[2]];return Line.create(f,d)}else if(e.direction){return this.rotate(Math.PI,e)}else{var v=e.elements||e;return Line.create(this.anchor.reflectionIn([v[0],v[1],v[2]||0]),this.direction)}},setVectors:function(e,t){e=Vector.create(e);t=Vector.create(t);if(e.elements.length==2){e.elements.push(0)}if(t.elements.length==2){t.elements.push(0)}if(e.elements.length>3||t.elements.length>3){return null}var n=t.modulus();if(n===0){return null}this.anchor=e;this.direction=Vector.create([t.elements[0]/n,t.elements[1]/n,t.elements[2]/n]);return this}};Line.create=function(e,t){var n=new Line;return n.setVectors(e,t)};Line.X=Line.create(Vector.Zero(3),Vector.i);Line.Y=Line.create(Vector.Zero(3),Vector.j);Line.Z=Line.create(Vector.Zero(3),Vector.k);Plane.prototype={eql:function(e){return this.contains(e.anchor)&&this.isParallelTo(e)},dup:function(){return Plane.create(this.anchor,this.normal)},translate:function(e){var t=e.elements||e;return Plane.create([this.anchor.elements[0]+t[0],this.anchor.elements[1]+t[1],this.anchor.elements[2]+(t[2]||0)],this.normal)},isParallelTo:function(e){var t;if(e.normal){t=this.normal.angleFrom(e.normal);return Math.abs(t)<=Sylvester.precision||Math.abs(Math.PI-t)<=Sylvester.precision}else if(e.direction){return this.normal.isPerpendicularTo(e.direction)}return null},isPerpendicularTo:function(e){var t=this.normal.angleFrom(e.normal);return Math.abs(Math.PI/2-t)<=Sylvester.precision},distanceFrom:function(e){if(this.intersects(e)||this.contains(e)){return 0}if(e.anchor){var t=this.anchor.elements,n=e.anchor.elements,r=this.normal.elements;return Math.abs((t[0]-n[0])*r[0]+(t[1]-n[1])*r[1]+(t[2]-n[2])*r[2])}else{var i=e.elements||e;var t=this.anchor.elements,r=this.normal.elements;return Math.abs((t[0]-i[0])*r[0]+(t[1]-i[1])*r[1]+(t[2]-(i[2]||0))*r[2])}},contains:function(e){if(e.normal){return null}if(e.direction){return this.contains(e.anchor)&&this.contains(e.anchor.add(e.direction))}else{var t=e.elements||e;var n=this.anchor.elements,r=this.normal.elements;var i=Math.abs(r[0]*(n[0]-t[0])+r[1]*(n[1]-t[1])+r[2]*(n[2]-(t[2]||0)));return i<=Sylvester.precision}},intersects:function(e){if(typeof e.direction=="undefined"&&typeof e.normal=="undefined"){return null}return!this.isParallelTo(e)},intersectionWith:function(e){if(!this.intersects(e)){return null}if(e.direction){var t=e.anchor.elements,n=e.direction.elements,r=this.anchor.elements,i=this.normal.elements;var s=(i[0]*(r[0]-t[0])+i[1]*(r[1]-t[1])+i[2]*(r[2]-t[2]))/(i[0]*n[0]+i[1]*n[1]+i[2]*n[2]);return Vector.create([t[0]+n[0]*s,t[1]+n[1]*s,t[2]+n[2]*s])}else if(e.normal){var o=this.normal.cross(e.normal).toUnitVector();var i=this.normal.elements,t=this.anchor.elements,u=e.normal.elements,a=e.anchor.elements;var f=Matrix.Zero(2,2),l=0;while(f.isSingular()){l++;f=Matrix.create([[i[l%3],i[(l+1)%3]],[u[l%3],u[(l+1)%3]]])}var c=f.inverse().elements;var h=i[0]*t[0]+i[1]*t[1]+i[2]*t[2];var p=u[0]*a[0]+u[1]*a[1]+u[2]*a[2];var d=[c[0][0]*h+c[0][1]*p,c[1][0]*h+c[1][1]*p];var v=[];for(var m=1;m<=3;m++){v.push(l==m?0:d[(m+(5-l)%3)%3])}return Line.create(v,o)}},pointClosestTo:function(e){var t=e.elements||e;var n=this.anchor.elements,r=this.normal.elements;var i=(n[0]-t[0])*r[0]+(n[1]-t[1])*r[1]+(n[2]-(t[2]||0))*r[2];return Vector.create([t[0]+r[0]*i,t[1]+r[1]*i,(t[2]||0)+r[2]*i])},rotate:function(e,t){var n=Matrix.Rotation(e,t.direction).elements;var r=t.pointClosestTo(this.anchor).elements;var i=this.anchor.elements,s=this.normal.elements;var o=r[0],u=r[1],a=r[2],f=i[0],l=i[1],c=i[2];var h=f-o,p=l-u,d=c-a;return Plane.create([o+n[0][0]*h+n[0][1]*p+n[0][2]*d,u+n[1][0]*h+n[1][1]*p+n[1][2]*d,a+n[2][0]*h+n[2][1]*p+n[2][2]*d],[n[0][0]*s[0]+n[0][1]*s[1]+n[0][2]*s[2],n[1][0]*s[0]+n[1][1]*s[1]+n[1][2]*s[2],n[2][0]*s[0]+n[2][1]*s[1]+n[2][2]*s[2]])},reflectionIn:function(e){if(e.normal){var t=this.anchor.elements,n=this.normal.elements;var r=t[0],i=t[1],s=t[2],o=n[0],u=n[1],a=n[2];var f=this.anchor.reflectionIn(e).elements;var l=r+o,c=i+u,h=s+a;var p=e.pointClosestTo([l,c,h]).elements;var d=[p[0]+(p[0]-l)-f[0],p[1]+(p[1]-c)-f[1],p[2]+(p[2]-h)-f[2]];return Plane.create(f,d)}else if(e.direction){return this.rotate(Math.PI,e)}else{var v=e.elements||e;return Plane.create(this.anchor.reflectionIn([v[0],v[1],v[2]||0]),this.normal)}},setVectors:function(e,t,n){e=Vector.create(e);e=e.to3D();if(e===null){return null}t=Vector.create(t);t=t.to3D();if(t===null){return null}if(typeof n=="undefined"){n=null}else{n=Vector.create(n);n=n.to3D();if(n===null){return null}}var r=e.elements[0],i=e.elements[1],s=e.elements[2];var o=t.elements[0],u=t.elements[1],a=t.elements[2];var f,l;if(n!==null){var c=n.elements[0],h=n.elements[1],p=n.elements[2];f=Vector.create([(u-i)*(p-s)-(a-s)*(h-i),(a-s)*(c-r)-(o-r)*(p-s),(o-r)*(h-i)-(u-i)*(c-r)]);l=f.modulus();if(l===0){return null}f=Vector.create([f.elements[0]/l,f.elements[1]/l,f.elements[2]/l])}else{l=Math.sqrt(o*o+u*u+a*a);if(l===0){return null}f=Vector.create([t.elements[0]/l,t.elements[1]/l,t.elements[2]/l])}this.anchor=e;this.normal=f;return this}};Plane.create=function(e,t,n){var r=new Plane;return r.setVectors(e,t,n)};Plane.XY=Plane.create(Vector.Zero(3),Vector.k);Plane.YZ=Plane.create(Vector.Zero(3),Vector.i);Plane.ZX=Plane.create(Vector.Zero(3),Vector.j);Plane.YX=Plane.XY;Plane.ZY=Plane.YZ;Plane.XZ=Plane.ZX;var $V=Vector.create;var $M=Matrix.create;var $L=Line.create;var $P=Plane.create;
define("sylvester", function(){});

